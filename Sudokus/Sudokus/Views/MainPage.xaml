<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:Sudokus.Converter"
             xmlns:components="clr-namespace:Sudokus.Components"
             xmlns:vms="clr-namespace:Sudokus.ViewModels"
             mc:Ignorable="d"
             x:Class="Sudokus.Views.MainPage" NavigationPage.HasNavigationBar="False">

    <ContentPage.Resources>

        <ResourceDictionary>
            <OnPlatform x:TypeArguments="x:String" x:Key="RobotoMono">
                <On Platform="Android" Value="RobotoMono-Regular.ttf#RobotoMono" />
            </OnPlatform>
            <OnPlatform x:TypeArguments="x:String" x:Key="RobotoMonoBold">
                <On Platform="Android" Value="RobotoMono-Bold.ttf#RobotoMonoBold" />
            </OnPlatform>
        </ResourceDictionary>

        <converters:CellValueConverter x:Key="CellValueConverter" />
        <converters:CellNoteConverter x:Key="CellNoteConverter" />
        <converters:IsSelectedConverter x:Key="IsSelectedConverter" />
        <converters:EnumConverter x:Key="EnumConverter" />


        <Style TargetType="Label" x:Key="CellText">
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="Large" />
            <Setter Property="TextColor" Value="Black" />
            <Setter Property="FontFamily" Value="{StaticResource RobotoMono}" />

            <Style.Triggers>

                <DataTrigger TargetType="Label" Binding="{Binding Path=HasValue}" Value="False">
                    <Setter Property="FontSize" Value="Micro" />
                    <Setter Property="TextColor" Value="DarkBlue"/>
                </DataTrigger>

                <DataTrigger TargetType="Label" Binding="{Binding Path=IsConstant}" Value="True">
                    <Setter Property="FontFamily" Value="{StaticResource RobotoMonoBold}" />
                </DataTrigger>
                <DataTrigger TargetType="Label" Binding="{Binding Path=IsConstant}" Value="False">
                    <Setter Property="FontFamily" Value="{StaticResource RobotoMono}" />
                </DataTrigger>

                <DataTrigger TargetType="Label" Binding="{Binding Path=IsError}" Value="True">
                    <Setter Property="TextColor" Value="Red" />
                </DataTrigger>
                <DataTrigger TargetType="Label" Binding="{Binding Path=IsError}" Value="False">
                    <Setter Property="TextColor" Value="Black" />
                </DataTrigger>
                
            </Style.Triggers>
        </Style>

        <Style TargetType="Frame" x:Key="CellFrame">
            <Setter Property="HasShadow"        Value="False" />
            <Setter Property="Padding"          Value="0" />
            <Setter Property="WidthRequest"     Value="40" />
            <Setter Property="HeightRequest"    Value="40" />
            <Setter Property="BorderColor"      Value="Black" />
            <Setter Property="CornerRadius"     Value="0" />
            <Setter Property="Margin"           Value="0" />
        </Style>

        <Style TargetType="Frame" x:Key="SquareFrame">
            <Setter Property="BackgroundColor" Value="White" />
            <Setter Property="HasShadow" Value="False" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style TargetType="StackLayout" x:Key="BoardStack">

        </Style>

        <Style TargetType="StackLayout" x:Key="RowStack">

        </Style>

        <Style TargetType="StackLayout" x:Key="SquareRowStack">

            <Setter Property="Spacing" Value="1" />
        </Style>

        <Style TargetType="Frame" x:Key="SelectionFrame">
            <Setter Property="WidthRequest" Value="30" />
            <Setter Property="HeightRequest" Value="30" />
            <Setter Property="HasShadow" Value="False" />
            <Setter Property="Padding" Value="0" />
        </Style>

        <Style TargetType="Label" x:Key="SelectionText">
            <Setter Property="HorizontalTextAlignment" Value="Center" />
            <Setter Property="VerticalTextAlignment" Value="Center" />
            <Setter Property="FontSize" Value="Medium" />
        </Style>


    </ContentPage.Resources>

    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="200" />
        </Grid.RowDefinitions>

        <Grid HorizontalOptions="Center" VerticalOptions="Start">

            <StackLayout x:Name="SudokuBoard" Style="{StaticResource BoardStack}" BindingContext="{Binding Sudoku}">

                <StackLayout Style="{StaticResource RowStack}" Orientation="Horizontal">
                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[0]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel FontFamily="{StaticResource RobotoMono}" BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[1]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[2]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>
                </StackLayout>

                <StackLayout Style="{StaticResource RowStack}" Orientation="Horizontal">
                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[3]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[4]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[5]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>
                </StackLayout>

                <StackLayout Style="{StaticResource RowStack}" Orientation="Horizontal">
                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[6]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[7]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>

                    <Frame Style="{StaticResource SquareFrame}" BindingContext="{Binding Squares[8]}">
                        <StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[0]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[1]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[2]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[3]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[4]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[5]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                            <StackLayout Orientation="Horizontal" Style="{StaticResource SquareRowStack}">

                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[6]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[7]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>
                                <Frame Style="{StaticResource CellFrame}">
                                    <components:CellLabel BindingContext="{Binding Cells[8]}" HasValue="{Binding Path=HasValue}" TapCommand="{Binding Source={RelativeSource AncestorType={x:Type ContentPage}}, Path=BindingContext.CellTapCommand}" TapCommandParameter="{Binding .}" Style="{StaticResource CellText}" NoteText="{Binding Path=Notes, Converter={StaticResource CellNoteConverter}}" ValueText="{Binding Path=Value, Converter={StaticResource CellValueConverter}}" />
                                </Frame>

                            </StackLayout>
                        </StackLayout>
                    </Frame>
                </StackLayout>

            </StackLayout>

        </Grid>

        <StackLayout Grid.Row="1" HorizontalOptions="Center">

            <StackLayout Orientation="Horizontal" Spacing="0">
                <CheckBox IsChecked="{Binding NotesMode}" VerticalOptions="Center" Margin="0" />
                <components:TapLabel TapCommand="{Binding ChangeNotesModeCommand}" Text="Notes" FontSize="Medium" VerticalOptions="Center" Padding="0" Margin="0" />
            </StackLayout>

            <StackLayout Orientation="Horizontal">

                <Button Text="Next" Command="{Binding GenerateCommand}" />
                <Button Text="Hint" Command="{Binding HintCommand}"/>
                <Button Text="Fill Notes" Command="{Binding FillNotesCommand}" />
                <Button Text="Reset" Command="{Binding ResetCommand}" />
            </StackLayout>

            <StackLayout Orientation="Horizontal">
                <Frame Style="{StaticResource SelectionFrame}" >
                    <components:SelectionLabel Value="0" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="0">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        -
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}" >
                    <components:SelectionLabel Value="1" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="1">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        1
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="2" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="2">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        2
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="3" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="3">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        3
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="4" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="4">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        4
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="5" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="5">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        5
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="6" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="6">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        6
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="7" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="7">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        7
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="8" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="8">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        8
                    </components:SelectionLabel>
                </Frame>
                <Frame Style="{StaticResource SelectionFrame}">
                    <components:SelectionLabel Value="9" Style="{StaticResource SelectionText}" TapCommand="{Binding ChangeSelectionCommand}">
                        <Label.Triggers>
                            <DataTrigger TargetType="Label" Binding="{Binding Path=ActiveSelection}" Value="9">
                                <Setter Property="FontAttributes" Value="Bold" />
                            </DataTrigger>
                        </Label.Triggers>
                        9
                    </components:SelectionLabel>
                </Frame>
            </StackLayout>
        </StackLayout>

    </Grid>

</ContentPage>